
ifneq ($(MK.rust),)
#----------------------------------------------------------------------------------------------

ifeq ($(VERBOSE),1)
CARGO_BUILD_FLAGS += -vv
endif

cargo-build:
	$(SHOW) \
	rm -f $(MK_CARGO_LOG) ;\
	RUSTFLAGS="$(RUSTC_FLAGS)" \
	cargo $(CARGO_TOOLCHAIN) build $(CARGO_BUILD_FLAGS)
	@if [[ -f $(MK_CARGO_LOG) ]]; then \
		echo "# build.rs log:" ;\
		cat $(MK_CARGO_LOG) ;\
	fi

.PHONY: cargo-build

#----------------------------------------------------------------------------------------------

TARGET_BIN:=$(CARGO_TARGET_DIR)/$(FLAVOR)/$(MODULE_NAME)

ifeq ($(wildcard $(TARGET_BIN)),)
	override TARGET_BIN:=
	ifneq ($(CARGO_TARGET_BIN_NAME),)
		override TARGET_BIN:=$(CARGO_TARGET_DIR)/$(FLAVOR)/$(CARGO_TARGET_BIN_NAME)
		ifeq ($(wildcard $(TARGET_BIN)),)
			override TARGET_BIN:=
		endif
	endif
endif

ifneq ($(TARGET_BIN),)

run:
ifeq ($(GDB),1)
	$(SHOW)rust-gdb $(TARGET_BIN)
else
	$(SHOW)$(TARGET_BIN)
endif

else

run:
	@echo "no runnable target found"

endif

.PHONY: run

#----------------------------------------------------------------------------------------------

ifeq ($(ALL),)
ifneq ($(MK_CUSTOM_CLEAN),1)

clean:
	$(SHOW)cargo clean

.PHONY: clean

endif # MK_CUSTOM_CLEAN
endif

#----------------------------------------------------------------------------------------------

nm:
	$(SHOW)nm -AC $(CARGO_TARGET_LIB_NAME)

clippy:
	$(SHOW) \
	RUSTFLAGS="$(RUSTC_FLAGS)" \
	cargo $(CARGO_TOOLCHAIN) clippy

check:
	$(SHOW) \
	RUSTFLAGS="$(RUSTC_FLAGS)" \
	cargo $(CARGO_TOOLCHAIN) check --quiet --workspace --message-format=json --all-targets --keep-going

update:
	$(SHOW)cargo update

.PHONY: update fmt format

fmt format:
	$(SHOW)cargo fmt

rust-info:
	$(SHOW)rustc --version
	$(SHOW)cargo --version
	$(SHOW)rustup --version
	$(SHOW)rustup show

.PHONY: nm upadate fmt format rust-info

#----------------------------------------------------------------------------------------------
endif # MK.rust
