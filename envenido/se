#!/usr/bin/env python3

import sys
import os
import argparse
import re
from pathlib import Path

HERE = os.path.dirname(__file__)
CLASSICO = os.getenv('CLASSICO')
sys.path.insert(0, CLASSICO)
import paella  # noqa: F401

def setenv(env, envpath, args):
    title = ''

    envpath = Path(envpath)
    if not envpath.exists():
        return 0

    envfile = ''
    if (envpath/'start').is_file():
        envfile = "start"
    elif (envpath/'env').is_file():
        envfile = "env"
    else:
        return 0
    
    set_title(str(envpath))
    
    args = ' '.join(args)
    ENV['ENVENIDO_MIXENV'] = f"-d {envpath} {args}" if not env else f"{env} {args}"
    ENV['ENVENIDO_SHLVL'] = str(int(ENV['SHLVL']) + 1)

    # exit(os.system(ENV['SHELL'] + " -i"))
    os.execv("/bin/bash",  ["/bin/bash", "-i"])

def get_title(envpath):
    with open(f"{envpath}/env", 'r') as file:
        line = file.readline()
        m = re.match(r'#\s*(.+)', line)
        if m:
            return m.group(1).strip()
        else:
            return ""

def set_title(envpath):
    title = get_title(envpath)
    if not title:
        title = "'" + os.path.basename(os.getcwd()) + "'"

    t = ENV['ENVENIDO_TITLE']
    t0 = t
    if t == "":
        t = title
    else:
        t += f" : {title}"

    ENV['ENVENIDO_TITLE0'] = title
    ENV['ENVENIDO_TITLE'] = t

def help():
    all = {}
    maxlen = 0
    for d in os.scandir(root):
        if os.path.isdir(d):
            d = d.path
            env = os.path.basename(d)
            all[env] = get_title(d)
            n = len(env)
            if n > maxlen:
                maxlen = n
#           print(f"{env}\t{title(env)}")

    print(r'''
Start a new shell session with the selected environment.

Usage:
  se <environment> <args>   Invoke <environment>
  se . <args>               Pick up environment in working dir
  se -e <dir> <args>        Pick up environment in <dir>
  se -h [<environment>]     Explain <environment> or print this screen

See also: mixenv

Available environments:
''')

    for env in sorted(all.keys()):
        print(f"{env:<{maxlen}}  {all[env]}")
    
    print()


# root = ENV['ENVENIDO'] + "/env"
root = ENV['ENVENIDO_ENV']

args = sys.argv[1:]

env = None
envpath = None

if len(args) == 0:
    help()
    exit(0)

arg = args.pop(0)
if arg == "" or arg == "-h" or arg == "--help":
    help()
    exit(0)

if arg == "-e":
    envpath = args.pop(0)
else:
    env = arg
    if env == ".":
        envpath = "."

if envpath is None:
    envpath = f"{root}/{env}" 

if not setenv(env, envpath, args):
    fatal(f"invalid environment {env}")
exit(0)
