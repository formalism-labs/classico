#!/usr/bin/env python

import argparse
import os
import sys
# import paella
# from typer import Argument
# from typing_extensions import Annotated

HERE = os.path.dirname(__file__)
CLASSICO = os.path.abspath(os.path.join(HERE, "../.."))
sys.path.insert(0, CLASSICO)
import paella

from paella import Option, Annotated, Argument

#----------------------------------------------------------------------------------------------

@cli_app
class App:
    def prolog(self):
        """
        **Command-line application**
        """

    def my_name(self):
        return "cli"

    @staticmethod
    def common_options(
        verbose: II[bool, Option("--verbose", "-v", help="Turn on extra logging")] = False,
        nop: II[bool, Option("--nop", help="No operation")] = False,
        ): pass

    def init(self):
        print(f"Hello from {self.my_name()}!")

app = App()

#----------------------------------------------------------------------------------------------

@app.command(help="Read information")
def read():
    print("Hello from read!")

#----------------------------------------------------------------------------------------------

@app.command(help="Write information")
def write(
    name: II[str, Argument(..., help="Text name")],
    for_: II[str, Option(..., help="For which user", metavar="USER")],
    count: II[int, Option("-n", "--count", help="How many copies to write", show_default="1")]):
    pass

#----------------------------------------------------------------------------------------------

@app.command(help="Option groups")
def groups(
        one: II[int, Option(help="First number.", group="Numbers")] = 0,
        two: II[int, Option(help="Second number.", group="Numbers")] = 0,
        red: II[bool, Option(help="Red color.", group="Colors")] = False,
        green: II[bool, Option(help="Green color.", group="Colors")] = False):
    pass

#----------------------------------------------------------------------------------------------

if __name__ == "__main__":
    app.run()
