
get_profile_d() {
	local d="$HOME/.profile.d"
	[[ ! -d $d ]] && mkdir -p "$d"
	echo "$d"
}

setup_profile_d() {
	local profile="$HOME/.bash_profile"
	[[ ! -f $profile ]] && touch $profile
	if grep -q 'read_profile_d' $profile 2>/dev/null; then return; fi

	local d="$HOME/.profile.d"
	[[ ! -d $d ]] && mkdir -p "$d"

	# Envenido handles .profile.d scripts
	[[ -n $DEVKA || -n $ENVENIDO ]] && return

	cat <<-END >> $profile
		. $CLASSICO/bin/classico.sh
		END
}

add_to_profile_d() {
	local files="$@"
	local d="$HOME/.profile.d"
	
	[[ ! -d $d ]] && mkdir -p $d

	local f
	if [[ -n $(ls "$files" 2> /dev/null) ]]; then
		for f in $files; do
			cp $f $d/
		done
	fi
}

read_profile_d() {
    local dir="$1"
	[[ -z $dir ]] && dir="$(get_profile_d)"
	local f
	if [[ -d $dir ]]; then
		if [[ -n $(ls $dir/*.sh 2> /dev/null) ]]; then
			for f in $dir/*.sh; do
				if [[ -r $f ]]; then
					. $f
				fi
			done
		fi
	fi
	hash -r
}

#----------------------------------------------------------------------------------------------

rearm() {
	if [[ -z $ENVENIDO ]]; then
		read_profile_d
	else
		envenido_rearm
	fi
}

#----------------------------------------------------------------------------------------------

activate_python() {
	local d="$(get_profile_d)"
	if [[ -f $d/python.sh ]]; then
		. $d/python.sh
	elif [[ -f $d/pyenv.sh ]]; then
		. $d/pyenv.sh
	elif [[ -f $d/python3-std-venv.sh ]]; then
		. $d/python3-std-venv.sh
	fi
	hash -r
}

#----------------------------------------------------------------------------------------------

export -f rearm read_profile_d get_profile_d
