
# Typically invoked with:
# PROGNAME="${BASH_SOURCE[0]}"
# HERE="$(cd "$(dirname "$PROGNAME")" &>/dev/null && pwd)"
# ROOT=$(cd $HERE/... && pwd)
# export CLASSICO=$ROOT/.../classico
# . $CLASSICO/shibumi/defs

set -eo pipefail -o errtrace

if [[ -n $PROGNAME ]]; then
	if commmand -v realpath 2> /dev/null; then
		__PROGNAME="$(realpath "${PROGNAME}")"
	else
		__PROGNAME="$(cd $(dirname "${PROGNAME}") && pwd)/$(basename "${PROGNAME}")"
	fi
fi

OP=""
[[ $NOP == 1 ]] && OP=echo

[[ $SUDO == 1 ]] && _SUDO="$SUDO"

SUDO=
if [[ $(id -u) != 0 ]]; then
	if command -v sudo &> /dev/null; then
		SUDO=sudo
	fi
fi
if [[ $_SUDO == 1 && -n $SUDO ]]; then
	$SUDO echo -n
fi

error_trap() {
	set +e
	local exit_code=$?
	[[ $exit_code == 0 ]] && exit_code=1
	# >&2 echo "$0: There are errors."
	local __PROGNAME=${__PROGNAME:-$0}
	local LINE="${BASH_LINENO[0]}"
	>&2 echo
	>&2 echo "In $__PROGNAME:"
	>&2 awk 'NR>L-4 && NR<L+4 { printf "%-5d%4s%s\n",NR,(NR==L?">>> ":""),$__PROGNAME }' L=$LINE $__PROGNAME
	>&2 echo
	exit $exit_code
}

# CBL-Mariner is missing awk, which is required for error_trap()
# this should move into system-setup
[[ -d /etc/os-release && $(source /etc/os-release; echo "${ID}") == mariner ]] && $SUDO tdnf install -q -y awk

# avoid trap with bashdb
if [[ -z $_Dbg_DEBUGGER_LEVEL ]]; then
	trap 'error_trap $LINENO' ERR
fi

if [[ -d $CLASSICO ]]; then
	. $CLASSICO/shibumi/functions 
fi

setup_profile_d
