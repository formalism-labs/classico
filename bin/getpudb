#!/usr/bin/env bash

PROGNAME="${BASH_SOURCE[0]}"
HERE="$(cd "$(dirname "$PROGNAME")" &>/dev/null && pwd)"
CLASSICO=$(cd $HERE/.. && pwd)
. $CLASSICO/shibumi/defs

OP=""
[[ $NOP == 1 ]] && OP=echo

if ! is_command python; then
	eprint "Python is not installed"
	exit 1
fi
	
if ! LOG=0 pip_install pudb; then
	xinstall git
	if ! LOG=0 CACHE=0 pip_install git+https://github.com/inducer/pudb.git@main; then
		tmpdir=$(mktemp -d /tmp/pudb.XXXXXX)
		cd $tmpdir
		runn git clone https://github.com/inducer/pudb.git
		cd pudb
		if is_command apt-get; then
			# this is debian-specific right now, as pip/git install is failing on arm
			xinstall python3-dev
		fi
		PIP_USER=
		[[ -z $VIRTUAL_ENV ]] && PIP_USER=--user
		# --prefix= is required for install to succeed
		runn python setup.py install $PIP_USER --prefix=
		cd /tmp
		$OP rm -rf $tmpdir
	fi
fi

hash -r
if ! is_command pudb; then
	pudb=$HOME/.local/bin/pudb
	if [[ ! -e $pudb ]]; then
		cat <<-'EOF' > $pudb
			#!/usr/bin/env bash

			python -m pudb "$@"
			EOF
		chmod +x $pudb
	fi
fi

cfg="$HOME/.config/pudb/pudb.cfg"
if [[ -f $cfg ]]; then
	if ! cat $cfg | grep seen_welcome | grep e039 &>/dev/null; then
		exit 0
	fi
fi

$OP mkdir -p "$(dirname $cfg)"
if [[ $NOP != 1 ]]; then
	cat <<-'EOF' > $cfg
		[pudb]
		breakpoints_weight = 1
		current_stack_frame = top
		custom_shell = 
		custom_stringifier = 
		custom_theme = 
		default_variables_access_level = public
		display = auto
		hide_cmdline_win = True
		hotkeys_breakpoints = B
		hotkeys_code = C
		hotkeys_stack = S
		hotkeys_variables = V
		hotkeys_toggle_cmdline_focus = ctrl x
		line_numbers = True
		prompt_on_quit = False
		seen_welcome = e049
		shell = internal
		sidebar_width = 0.5
		stack_weight = 1
		stringifier = repr
		theme = monokai
		variables_weight = 1
		wrap_variables = True
		EOF
fi
