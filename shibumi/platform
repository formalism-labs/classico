
platform_os() {
	case "$OSTYPE" in
		linux*)   echo "linux" ;;
		solaris*) echo "solaris" ;;
		darwin*)  echo "macos" ;;
		bsd*)     echo "bsd" ;;
		msys*)    echo "windows" ;;
		cygwin*)  echo "windows" ;;
		*)        echo "?" ;;
	esac
}

platform_windows() {
	if [[ -n $MSYSTEM ]]; then
		echo "msys2"
	elif [[ $OSTYPE == cygwin ]]; then
		echo "cygwin"
	elif cat /proc/version | grep -i wsl2 >& /dev/null ]]; then
		echo "wsl"
	elif [[ -d $WINDIR ]]; then
		echo "windows"
	else
		echo "unknown"
	fi
}

platform_shell() {
	if [[ $(platform_os) == windows ]]; then
		echo "$(platform_windows)"
	else
		echo ""
	fi
}

platform_arch() {
	local arch="$(uname -m)"
	case "$arch" in
		x86_64*)  echo "x64" ;;
		amd64*)   echo "x64" ;;
		i386*)    echo "x86" ;;
		i686*)    echo "x86" ;;
		aarch64*) echo "arm64v8" ;;
		armv7hl*) echo "arm32v7" ;;
		armv7l*)  echo "arm32v7" ;;
		armv6l*)  echo "arm32v6" ;;
		ppc64*)   echo "ppc" ;;
		s390*)    echo "s390_31" ;;
		s390x*)   echo "s390x" ;;
		*)        echo "($arch)" ;;
	esac
}

#----------------------------------------------------------------------------------------------

export -f platform_os platform_windows platform_arch
