#!/usr/bin/env bash

PROGNAME="${BASH_SOURCE[0]}"
HERE="$(cd "$(dirname "$PROGNAME")" &>/dev/null && pwd)"
CLASSICO=$(cd $HERE/.. && pwd)
. $CLASSICO/shibumi/defs

# GOOD_NIGHTLY=nightly-2022-01-09

if [[ -f $HOME/.cargo/env ]]; then
	source $HOME/.cargo/env
else
	append_to_path "$HOME/.cargo/bin"
fi
if ! is_command rustup; then
	runn $CLASSICO/bin/getget
	runn "curl --proto '=https' --tlsv1.2 https://raw.githubusercontent.com/rust-lang/rustup/master/rustup-init.sh -sSf | sh -s -- -y"
	# runn "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
	if [[ $(platform_os) == windows ]]; then
		ln -sf $(cygpath $USERPROFILE)/.cargo ~/.cargo
		ln -sf $(cygpath $USERPROFILE)/.rustup ~/.rustup
		append_to_path "$HOME/.cargo/bin"
	else
		source $HOME/.cargo/env
	fi
elif ! runn rustup update stable; then
	runn rustup toolchain uninstall stable
	runn rustup toolchain install stable
fi

runn rustup toolchain uninstall nightly
if [[ -n $GOOD_NIGHTLY ]]; then
	# workaround for nightly install issues https://github.com/rust-lang/rls/issues/623
	runn rustup toolchain install nightly
	runn rustup component add --toolchain nightly rust-src

	runn rustup toolchain install $GOOD_NIGHTLY
	runn rustup component add --toolchain $GOOD_NIGHTLY rust-src
else
	runn rustup toolchain install nightly
	runn rustup component add --toolchain nightly rust-src
fi

rustup show

profile_d="$(get_profile_d)/rust.sh"
if [[ -f $HOME/.cargo/env ]]; then
    cp $HOME/.cargo/env $profile_d
elif [[ -f /usr/local/cargo/env ]]; then
	cp /usr/local/cargo/env $profile_d
else
	cat <<-END > $profile_d
		append_to_path "$HOME/.cargo/bin"
		END
fi

if [[ -n $GOOD_NIGHTLY ]]; then
	cat <<-END >> $profile_d
		export RUST_GOOD_NIGHTLY="$GOOD_NIGHTLY"
		END
fi

exit 0
