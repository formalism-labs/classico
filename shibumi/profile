
get_profile_d() {
	local d="$HOME/.profile.d"
	[[ ! -d $d ]] && mkdir -p "$d"
	echo "$d"
}

setup_profile_d() {
	local profile="$HOME/.bash_profile"
	[[ ! -f $profile ]] && touch $profile
	if grep -q '\.profile\.d' $profile 2>/dev/null; then return; fi

	local d="$HOME/.profile.d"
	[[ ! -d $d ]] && mkdir -p "$d"

	cat <<-END | >> $profile
		export CLASSICO="$CLASSICO"
		[[ -d \$CLASSICO ]] && . \$CLASSICO/shibumi/functions;
		END
	cat <<-END | tr '\n' ' ' >> $profile
		if [ -d $d ]; then
			if [ -n "\$(ls $d/*.sh 2> /dev/null)" ]; then
				for __sh in $d/*.sh; do
					if [ -r \$__sh ]; then
						. \$__sh;
					fi;
				done;
				unset __sh;
			fi;
		fi
		END
}

add_to_profile_d() {
	local files="$@"
	local d="$HOME/.profile.d"
	
	[[ ! -d $d ]] && mkdir -p $d

	local f
	if [[ -n $(ls "$files" 2> /dev/null) ]]; then
		for f in $files; do
			cp $f $d/
		done
	fi
}

read_profile_d() {
	local d="$(get_profile_d)"
	local f
	if [[ -d $d ]]; then
		if [[ -n $(ls $d/*.sh 2> /dev/null) ]]; then
			for f in $d/*.sh; do
				if [[ -r $f ]]; then
					. $f
				fi
			done
		fi
	fi
	hash -r
}

activate_python() {
	local d="$(get_profile_d)"
	if [[ -f $d/python.sh ]]; then
		. $d/python.sh
	elif [[ -f $d/pyenv.sh ]]; then
		. $d/pyenv.sh
	elif [[ -f $d/python3-std-venv.sh ]]; then
		. $d/python3-std-venv.sh
	fi
	hash -r
}
