
__help__() {
	cat <<-'END'
		mixenv: mix Envenido environment

		[ARGVARS...] mixenv [--help|help] {<environment> | -d [directory]}

		Argument variables:
		START=0       Don't read start script
		REMIX=0       Do not remix
		FORCE=1       Same as REMIX=1

		V|VERBOSE=1   Print commands and output
		NOP=1         Dry run
		HELP=1        Show help
	END
}

__mixenv__() {
	if [[ $1 == --help || $1 == help || $HELP == 1 ]]; then
		__help__
		return 0
	fi

	[[ $V == 1 ]] && VERBOSE=1
	[[ $FORCE == 1 ]] && REMIX=1

	local OP=""
	[[ $NOP == 1 ]] && OP=echo

	local n="$1"
	local fqn
	local d
	if [[ $n == . ]]; then
		d="$PWD"
		n="$(basename "$d")"
		fqn="$(cd "$d" &>/dev/null && pwd)"
		fqn="${fqn//\//_}"
	elif [[ $n == "-d" ]]; then
		shift
		d="$1"
		n="$(basename "$d")"
		fqn="$(cd "$d" &>/dev/null && pwd)"
		fqn="${fqn//\//_}"
	else
		d="$ENVENIDO_ENVS/$n"
		fqn="$n"
	fi

	shift # now we're left with the arguments

	if [[ ! -d $d ]]; then
		>&2 echo "mixenv: ${RED}environment $n does not exist${BW}"
		return 1
	fi

	local e="__ENV_${fqn//-/_}"
	e="${e//\./_}"

	if [[ ${!e} == 1 && $REMIX == 0 ]]; then
		[[ $VERBOSE == 1 ]] && echo "mixenv: $n already installed"
		return 0
	fi

	local envdir=""
	local dotenv=""
	local venv=""
	
	if [[ -f $d/env ]]; then
		envdir="$d"
	elif [[ -f $d/.env ]]; then
		dotenv="$d/.env"
	elif [[ -d $d/.env && -f $d/.env/env ]]; then
		envdir="$d/.env"
	elif [[ -d $d/env && -f $d/env/env ]]; then
		envdir="$d/env"
	else
		>&2 echo "mixenv: ${RED}invalid environment in $d${BW}"
		return 1
	fi
	if [[ -d $d/.venv ]]; then
		venv="$d/.venv"
	elif [[ -d $d/venv ]]; then
		venv="$d/venv"
	fi

	if [[ -n $dotenv ]]; then
		if [[ $NOP == 1 || $VERBOSE == 1 ]]; then
			echo -e "\n# $dotenv:"
			cat $d/env
		fi
		$OP . $dotenv
	fi

	if [[ -n $envdir ]]; then
		if [[ $NOP == 1 || $VERBOSE == 1 ]]; then
			echo -e "\n# $envdir/env:"
			cat $envdir/env
		fi
		$OP . $envdir/env "$@" || return 1
		if [[ $START != 0 && -f $envdir/start ]]; then
			if [[ $NOP == 1 || $VERBOSE == 1 ]]; then
				echo -e "\n# $envdir/start:"
				cat $envdir/start
			fi
			$OP . $envdir/start "$@" || return 1
		fi
	fi

	if [[ -n $venv ]]; then
		if [[ $NOP == 1 || $VERBOSE == 1 ]]; then
			echo -e "\n# $venv/pyvenv.cfg:"
			cat $venv/pyvenv.cfg
		fi
		if [[ -f $venv/bin/activate ]]; then
			. $venv/bin/activate
		elif [[ -f $venv/Scripts/activate ]]; then
			$venv/Scripts/activate
		else
			>&2 echo "mixenv: invalid virtual environment at $venv"
		fi
	fi
	
	$OP export $e=1
	if declare -F envenido_debug >/dev/null; then
		envenido_debug "mixenv: $n mixed"
	fi
	return 0
}

if [[ -z $_Dbg_DEBUGGER_LEVEL ]]; then
	trap 'unset -f __mixenv__ __help__"' RETURN
fi
VERBOSE="$VERBOSE" REMIX="$REMIX" __mixenv__ $@ || true
if [[ -z $_Dbg_DEBUGGER_LEVEL ]]; then
	trap - RETURN
fi
unset -f __mixenv__ __help__
